#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.controllers.algorithms.VisibilityRepDisplayController
	c260 [label=<<table title="pfc.controllers.algorithms.VisibilityRepDisplayController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepDisplayController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VisibilityRepDisplayController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - graph : Graph </td></tr>
<tr><td align="left" balign="left"> - dual : Graph </td></tr>
<tr><td align="left" balign="left"> - drawing : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> - algorithm : VisibilityRepresentationAlgorithm </td></tr>
<tr><td align="left" balign="left"> - visRepDCLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanel : ExecutionControlPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDualPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDual : VisibilityRepDisplayController.ViewportDual </td></tr>
<tr><td align="left" balign="left"> - viewportVRPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportVR : VisibilityRepDisplayController.ViewportVR </td></tr>
<tr><td align="left" balign="left"> - exeCancelEventListener : StateSupport </td></tr>
<tr><td align="left" balign="left"> - history : SnapshotList&lt;VisRepAlgorithmHistory&gt; </td></tr>
<tr><td align="left" balign="left"> - started : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepDisplayController(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
<tr><td align="left" balign="left"> - setViewportDualPanel() </td></tr>
<tr><td align="left" balign="left"> - setViewportVRPanel() </td></tr>
<tr><td align="left" balign="left"> - setHistory() </td></tr>
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
<tr><td align="left" balign="left"> - onAlgorithmChanged(source : Object) </td></tr>
<tr><td align="left" balign="left"> - update() </td></tr>
<tr><td align="left" balign="left"> - updateExecutionStep() : String </td></tr>
<tr><td align="left" balign="left"> + getGraph() : Graph </td></tr>
<tr><td align="left" balign="left"> + getDual() : Graph </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + setGraph(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> + setDual(dual : Graph) </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : VisibilityRepresentationDrawing) </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStarted(started : boolean) </td></tr>
<tr><td align="left" balign="left"> + addExeCancelEventListener(listener : ChangeListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepDisplayController.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.VisibilityRepDisplayController.ViewportDual
	c261 [label=<<table title="pfc.controllers.algorithms.VisibilityRepDisplayController.ViewportDual" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepDisplayController.ViewportDual.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportDual </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepDisplayController.ViewportDual() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawable() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepDisplayController.ViewportDual.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.VisibilityRepDisplayController.ViewportVR
	c262 [label=<<table title="pfc.controllers.algorithms.VisibilityRepDisplayController.ViewportVR" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepDisplayController.ViewportVR.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportVR </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepDisplayController.ViewportVR() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawable() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepDisplayController.ViewportVR.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.UpwardPolylineDisplayController
	c263 [label=<<table title="pfc.controllers.algorithms.UpwardPolylineDisplayController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UpwardPolylineDisplayController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UpwardPolylineDisplayController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - polyline : Graph </td></tr>
<tr><td align="left" balign="left"> - drawing : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> - algorithm : UpwardPolylineAlgorithm </td></tr>
<tr><td align="left" balign="left"> - polylineDCLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanel : ExecutionControlPanel </td></tr>
<tr><td align="left" balign="left"> - viewportPolylinePanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportPolyline : UpwardPolylineDisplayController.ViewportPolyline </td></tr>
<tr><td align="left" balign="left"> - exeCancelEventListener : StateSupport </td></tr>
<tr><td align="left" balign="left"> - history : SnapshotList&lt;UpwardPolylineAlgorithmHistory&gt; </td></tr>
<tr><td align="left" balign="left"> - started : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UpwardPolylineDisplayController(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
<tr><td align="left" balign="left"> - setViewportPolylinePanel() </td></tr>
<tr><td align="left" balign="left"> - setHistory() </td></tr>
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
<tr><td align="left" balign="left"> - onAlgorithmChanged(source : Object) </td></tr>
<tr><td align="left" balign="left"> - update() </td></tr>
<tr><td align="left" balign="left"> - updateExecutionStep() : String </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + getPolyline() : Graph </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : VisibilityRepresentationDrawing) </td></tr>
<tr><td align="left" balign="left"> + setPolyline(polyline : Graph) </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStarted(started : boolean) </td></tr>
<tr><td align="left" balign="left"> + addExeCancelEventListener(listener : ChangeListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./UpwardPolylineDisplayController.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.UpwardPolylineDisplayController.ViewportPolyline
	c264 [label=<<table title="pfc.controllers.algorithms.UpwardPolylineDisplayController.ViewportPolyline" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UpwardPolylineDisplayController.ViewportPolyline.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportPolyline </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UpwardPolylineDisplayController.ViewportPolyline() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawableDrawing() : boolean </td></tr>
<tr><td align="left" balign="left"> - isDrawablePolyline() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./UpwardPolylineDisplayController.ViewportPolyline.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.SLDominanceDisplayController
	c265 [label=<<table title="pfc.controllers.algorithms.SLDominanceDisplayController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SLDominanceDisplayController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SLDominanceDisplayController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - drawing : DominanceDrawing </td></tr>
<tr><td align="left" balign="left"> - algorithm : SLDominanceAlgorithm </td></tr>
<tr><td align="left" balign="left"> - algorithmDCLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanel : ExecutionControlPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDominancePanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDominance : SLDominanceDisplayController.ViewportDominance </td></tr>
<tr><td align="left" balign="left"> - exeCancelEventListener : StateSupport </td></tr>
<tr><td align="left" balign="left"> - history : SnapshotList&lt;SLDominanceAlgorithmHistory&gt; </td></tr>
<tr><td align="left" balign="left"> - started : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SLDominanceDisplayController(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
<tr><td align="left" balign="left"> - setViewportDominancePanel() </td></tr>
<tr><td align="left" balign="left"> - setHistory() </td></tr>
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
<tr><td align="left" balign="left"> - onAlgorithmChanged(source : Object) </td></tr>
<tr><td align="left" balign="left"> - update() </td></tr>
<tr><td align="left" balign="left"> - updateExecutionStep() : String </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : DominanceDrawing </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : DominanceDrawing) </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStarted(started : boolean) </td></tr>
<tr><td align="left" balign="left"> + addExeCancelEventListener(listener : ChangeListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./SLDominanceDisplayController.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.SLDominanceDisplayController.ViewportDominance
	c266 [label=<<table title="pfc.controllers.algorithms.SLDominanceDisplayController.ViewportDominance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SLDominanceDisplayController.ViewportDominance.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportDominance </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SLDominanceDisplayController.ViewportDominance() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawableDrawing() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./SLDominanceDisplayController.ViewportDominance.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.PolylineDominanceDisplayController
	c267 [label=<<table title="pfc.controllers.algorithms.PolylineDominanceDisplayController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PolylineDominanceDisplayController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PolylineDominanceDisplayController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - drawing : DominanceDrawing </td></tr>
<tr><td align="left" balign="left"> - reduced : Graph </td></tr>
<tr><td align="left" balign="left"> - algorithm : PolylineDominanceAlgorithm </td></tr>
<tr><td align="left" balign="left"> - algorithmDCLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanel : ExecutionControlPanel </td></tr>
<tr><td align="left" balign="left"> - viewportReducedPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportReduced : PolylineDominanceDisplayController.ViewportReduced </td></tr>
<tr><td align="left" balign="left"> - viewportDominancePanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDominance : PolylineDominanceDisplayController.ViewportDominance </td></tr>
<tr><td align="left" balign="left"> - exeCancelEventListener : StateSupport </td></tr>
<tr><td align="left" balign="left"> - history : SnapshotList&lt;PolylineDominanceAlgorithmHistory&gt; </td></tr>
<tr><td align="left" balign="left"> - started : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PolylineDominanceDisplayController(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
<tr><td align="left" balign="left"> - setViewportReducedPanel() </td></tr>
<tr><td align="left" balign="left"> - setViewportDominancePanel() </td></tr>
<tr><td align="left" balign="left"> - setHistory() </td></tr>
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
<tr><td align="left" balign="left"> - onAlgorithmChanged(source : Object) </td></tr>
<tr><td align="left" balign="left"> - update() </td></tr>
<tr><td align="left" balign="left"> - updateExecutionStep() : String </td></tr>
<tr><td align="left" balign="left"> + getReduced() : Graph </td></tr>
<tr><td align="left" balign="left"> + setReduced(reduced : Graph) </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : DominanceDrawing </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : DominanceDrawing) </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStarted(started : boolean) </td></tr>
<tr><td align="left" balign="left"> + addExeCancelEventListener(listener : ChangeListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./PolylineDominanceDisplayController.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.PolylineDominanceDisplayController.ViewportReduced
	c268 [label=<<table title="pfc.controllers.algorithms.PolylineDominanceDisplayController.ViewportReduced" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PolylineDominanceDisplayController.ViewportReduced.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportReduced </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PolylineDominanceDisplayController.ViewportReduced() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
		</table></td></tr>
		</table>>, URL="./PolylineDominanceDisplayController.ViewportReduced.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.PolylineDominanceDisplayController.ViewportDominance
	c269 [label=<<table title="pfc.controllers.algorithms.PolylineDominanceDisplayController.ViewportDominance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PolylineDominanceDisplayController.ViewportDominance.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportDominance </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PolylineDominanceDisplayController.ViewportDominance() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawableDrawing() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./PolylineDominanceDisplayController.ViewportDominance.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.OrthogonalDisplayController
	c270 [label=<<table title="pfc.controllers.algorithms.OrthogonalDisplayController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OrthogonalDisplayController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OrthogonalDisplayController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - digraph : Graph </td></tr>
<tr><td align="left" balign="left"> - drawing : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> - ortogonal : Graph </td></tr>
<tr><td align="left" balign="left"> - algorithm : OrthogonalAlgorithm </td></tr>
<tr><td align="left" balign="left"> - orthogonalDCLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanel : ExecutionControlPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDigraphPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDigraph : OrthogonalDisplayController.ViewportDigraph </td></tr>
<tr><td align="left" balign="left"> - viewportOrthogonalPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportOrthogonal : OrthogonalDisplayController.ViewportOrthogonal </td></tr>
<tr><td align="left" balign="left"> - exeCancelEventListener : StateSupport </td></tr>
<tr><td align="left" balign="left"> - history : SnapshotList&lt;OrthogonalAlgorithmHistory&gt; </td></tr>
<tr><td align="left" balign="left"> - started : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OrthogonalDisplayController(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
<tr><td align="left" balign="left"> - setViewportDigraphPanel() </td></tr>
<tr><td align="left" balign="left"> - setViewportOrthogonalPanel() </td></tr>
<tr><td align="left" balign="left"> - setHistory() </td></tr>
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
<tr><td align="left" balign="left"> - onAlgorithmChanged(source : Object) </td></tr>
<tr><td align="left" balign="left"> - update() </td></tr>
<tr><td align="left" balign="left"> - updateExecutionStep() : String </td></tr>
<tr><td align="left" balign="left"> + getDigraph() : Graph </td></tr>
<tr><td align="left" balign="left"> + setDigraph(digraph : Graph) </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : VisibilityRepresentationDrawing) </td></tr>
<tr><td align="left" balign="left"> + getOrtogonal() : Graph </td></tr>
<tr><td align="left" balign="left"> + setOrtogonal(ortogonal : Graph) </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStarted(started : boolean) </td></tr>
<tr><td align="left" balign="left"> + addExeCancelEventListener(listener : ChangeListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./OrthogonalDisplayController.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.OrthogonalDisplayController.ViewportDigraph
	c271 [label=<<table title="pfc.controllers.algorithms.OrthogonalDisplayController.ViewportDigraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OrthogonalDisplayController.ViewportDigraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportDigraph </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OrthogonalDisplayController.ViewportDigraph() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
		</table></td></tr>
		</table>>, URL="./OrthogonalDisplayController.ViewportDigraph.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.OrthogonalDisplayController.ViewportOrthogonal
	c272 [label=<<table title="pfc.controllers.algorithms.OrthogonalDisplayController.ViewportOrthogonal" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OrthogonalDisplayController.ViewportOrthogonal.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportOrthogonal </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OrthogonalDisplayController.ViewportOrthogonal() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawableDrawing() : boolean </td></tr>
<tr><td align="left" balign="left"> - isDrawableOrthogonal() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./OrthogonalDisplayController.ViewportOrthogonal.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.ExecutionControlPanelActions
	c273 [label=<<table title="pfc.controllers.algorithms.ExecutionControlPanelActions" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExecutionControlPanelActions.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ExecutionControlPanelActions </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./ExecutionControlPanelActions.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.ExecutionControlPanel
	c274 [label=<<table title="pfc.controllers.algorithms.ExecutionControlPanel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExecutionControlPanel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExecutionControlPanel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - executer : ExecutionControlPanelActions </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanelLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - cancelButton : JButton </td></tr>
<tr><td align="left" balign="left"> - backButton : JButton </td></tr>
<tr><td align="left" balign="left"> - nextButton : JButton </td></tr>
<tr><td align="left" balign="left"> - endButton : JButton </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepTitle : JLabel </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepExplanationTitle : JLabel </td></tr>
<tr><td align="left" balign="left"> - scrollPaneExplanation : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepExplanationText : JTextArea </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExecutionControlPanel(executer : ExecutionControlPanelActions) </td></tr>
<tr><td align="left" balign="left"> - setCancelButton() </td></tr>
<tr><td align="left" balign="left"> - setBackButton() </td></tr>
<tr><td align="left" balign="left"> - setNextButton() </td></tr>
<tr><td align="left" balign="left"> - setEndButton() </td></tr>
<tr><td align="left" balign="left"> - setExplanationTextArea() </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
		</table></td></tr>
		</table>>, URL="./ExecutionControlPanel.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.ConstrainedVisRepDisplayController
	c275 [label=<<table title="pfc.controllers.algorithms.ConstrainedVisRepDisplayController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedVisRepDisplayController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConstrainedVisRepDisplayController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - graph : Graph </td></tr>
<tr><td align="left" balign="left"> - dual : Graph </td></tr>
<tr><td align="left" balign="left"> - drawing : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> - algorithm : ConstrainedVisRepAlgorithm </td></tr>
<tr><td align="left" balign="left"> - visRepDCLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanel : ExecutionControlPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDualPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportDual : ConstrainedVisRepDisplayController.ViewportDual </td></tr>
<tr><td align="left" balign="left"> - viewportVRPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportVR : ConstrainedVisRepDisplayController.ViewportVR </td></tr>
<tr><td align="left" balign="left"> - exeCancelEventListener : StateSupport </td></tr>
<tr><td align="left" balign="left"> - history : SnapshotList&lt;VisRepAlgorithmHistory&gt; </td></tr>
<tr><td align="left" balign="left"> - started : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConstrainedVisRepDisplayController(graph : Graph, paths : NonIntersectingPathList) </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
<tr><td align="left" balign="left"> - setViewportDualPanel() </td></tr>
<tr><td align="left" balign="left"> - setViewportVRPanel() </td></tr>
<tr><td align="left" balign="left"> - setHistory() </td></tr>
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
<tr><td align="left" balign="left"> - onAlgorithmChanged(source : Object) </td></tr>
<tr><td align="left" balign="left"> - update() </td></tr>
<tr><td align="left" balign="left"> - updateExecutionStep() : String </td></tr>
<tr><td align="left" balign="left"> + getGraph() : Graph </td></tr>
<tr><td align="left" balign="left"> + getDual() : Graph </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + setGraph(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> + setDual(dual : Graph) </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : VisibilityRepresentationDrawing) </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStarted(started : boolean) </td></tr>
<tr><td align="left" balign="left"> + addExeCancelEventListener(listener : ChangeListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedVisRepDisplayController.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.ConstrainedVisRepDisplayController.ViewportDual
	c276 [label=<<table title="pfc.controllers.algorithms.ConstrainedVisRepDisplayController.ViewportDual" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedVisRepDisplayController.ViewportDual.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportDual </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConstrainedVisRepDisplayController.ViewportDual() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawable() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedVisRepDisplayController.ViewportDual.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.ConstrainedVisRepDisplayController.ViewportVR
	c277 [label=<<table title="pfc.controllers.algorithms.ConstrainedVisRepDisplayController.ViewportVR" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedVisRepDisplayController.ViewportVR.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportVR </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConstrainedVisRepDisplayController.ViewportVR() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawable() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedVisRepDisplayController.ViewportVR.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.ConstrainedPolylineDisplayController
	c278 [label=<<table title="pfc.controllers.algorithms.ConstrainedPolylineDisplayController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedPolylineDisplayController.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConstrainedPolylineDisplayController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - polyline : Graph </td></tr>
<tr><td align="left" balign="left"> - drawing : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> - algorithm : ConstrainedPolylineAlgorithm </td></tr>
<tr><td align="left" balign="left"> - polylineDCLayout : GroupLayout </td></tr>
<tr><td align="left" balign="left"> - exeStepByStepPanel : ExecutionControlPanel </td></tr>
<tr><td align="left" balign="left"> - viewportPolylinePanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - viewportPolyline : ConstrainedPolylineDisplayController.ViewportPolyline </td></tr>
<tr><td align="left" balign="left"> - exeCancelEventListener : StateSupport </td></tr>
<tr><td align="left" balign="left"> - history : SnapshotList&lt;UpwardPolylineAlgorithmHistory&gt; </td></tr>
<tr><td align="left" balign="left"> - started : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConstrainedPolylineDisplayController(graph : Graph, paths : NonIntersectingPathList) </td></tr>
<tr><td align="left" balign="left"> - organizeLayout() </td></tr>
<tr><td align="left" balign="left"> - setViewportPolylinePanel() </td></tr>
<tr><td align="left" balign="left"> - setHistory() </td></tr>
<tr><td align="left" balign="left"> + executeNextStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeBackStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeEndStep() : String </td></tr>
<tr><td align="left" balign="left"> + executeCancelStep() : String </td></tr>
<tr><td align="left" balign="left"> - onAlgorithmChanged(source : Object) </td></tr>
<tr><td align="left" balign="left"> - update() </td></tr>
<tr><td align="left" balign="left"> - updateExecutionStep() : String </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + getPolyline() : Graph </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : VisibilityRepresentationDrawing) </td></tr>
<tr><td align="left" balign="left"> + setPolyline(polyline : Graph) </td></tr>
<tr><td align="left" balign="left"> + isStarted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStarted(started : boolean) </td></tr>
<tr><td align="left" balign="left"> + addExeCancelEventListener(listener : ChangeListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedPolylineDisplayController.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.controllers.algorithms.ConstrainedPolylineDisplayController.ViewportPolyline
	c279 [label=<<table title="pfc.controllers.algorithms.ConstrainedPolylineDisplayController.ViewportPolyline" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedPolylineDisplayController.ViewportPolyline.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ViewportPolyline </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - settings : GraphSettings </td></tr>
<tr><td align="left" balign="left"> - transform : AffineTransform </td></tr>
<tr><td align="left" balign="left"> - mouseWheelMoved : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConstrainedPolylineDisplayController.ViewportPolyline() </td></tr>
<tr><td align="left" balign="left"> + paintComponent(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update() </td></tr>
<tr><td align="left" balign="left"> - isDrawableDrawing() : boolean </td></tr>
<tr><td align="left" balign="left"> - isDrawablePolyline() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedPolylineDisplayController.ViewportPolyline.html", fontname="arial", fontcolor="black", fontsize=9.0];
	//pfc.controllers.algorithms.VisibilityRepDisplayController implements pfc.controllers.algorithms.ExecutionControlPanelActions
	c273:p -> c260:p [dir=back,arrowtail=empty,style=dashed];
	//pfc.controllers.algorithms.UpwardPolylineDisplayController implements pfc.controllers.algorithms.ExecutionControlPanelActions
	c273:p -> c263:p [dir=back,arrowtail=empty,style=dashed];
	//pfc.controllers.algorithms.SLDominanceDisplayController implements pfc.controllers.algorithms.ExecutionControlPanelActions
	c273:p -> c265:p [dir=back,arrowtail=empty,style=dashed];
	//pfc.controllers.algorithms.PolylineDominanceDisplayController implements pfc.controllers.algorithms.ExecutionControlPanelActions
	c273:p -> c267:p [dir=back,arrowtail=empty,style=dashed];
	//pfc.controllers.algorithms.OrthogonalDisplayController implements pfc.controllers.algorithms.ExecutionControlPanelActions
	c273:p -> c270:p [dir=back,arrowtail=empty,style=dashed];
	//pfc.controllers.algorithms.ConstrainedVisRepDisplayController implements pfc.controllers.algorithms.ExecutionControlPanelActions
	c273:p -> c275:p [dir=back,arrowtail=empty,style=dashed];
	//pfc.controllers.algorithms.ConstrainedPolylineDisplayController implements pfc.controllers.algorithms.ExecutionControlPanelActions
	c273:p -> c278:p [dir=back,arrowtail=empty,style=dashed];
}

