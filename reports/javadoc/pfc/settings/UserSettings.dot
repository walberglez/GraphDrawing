#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.models.ObservableModel
	c16191 [label=<<table title="pfc.models.ObservableModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../models/ObservableModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ObservableModel </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> pfc.models </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ObservableModel() </td></tr>
		</table></td></tr>
		</table>>, URL="../models/ObservableModel.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.settings.UserSettings
	c16231 [label=<<table title="pfc.settings.UserSettings" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./UserSettings.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UserSettings </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + instance : UserSettings </td></tr>
<tr><td align="left" balign="left"> + defaultVertexWeight : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultVertexColor : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultVertexPrefix : ObservableModel.Property&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultVertexRadius : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultVertexIsSelected : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultEdgeWeight : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultEdgeColor : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultEdgePrefix : ObservableModel.Property&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultEdgeThickness : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultEdgeHandleRadiusRatio : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultLoopDiameter : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultEdgeIsSelected : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultShowVertexWeights : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultShowVertexLabels : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultShowEdgeHandles : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultShowEdgeWeights : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultShowEdgeLabels : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + graphBackground : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + selectionBoxFill : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + selectionBoxLine : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + vertexLine : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + selectedVertexFill : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + selectedVertexLine : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + draggingEdge : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + edgeHandle : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + selectedEdge : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + selectedEdgeHandle : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + uncoloredEdgeLine : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + uncoloredDualEdgeLine : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + uncoloredVertexFill : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + uncoloredDualVertexFill : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + vertexLabelColor : ObservableModel.Property&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + elementColors : ObservableList&lt;Color&gt; </td></tr>
<tr><td align="left" balign="left"> + vertexClickMargin : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + edgeHandleClickMargin : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + panDecelerationFactor : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + panOnDoubleClick : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + deselectVertexWithNewEdge : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + zoomInFactor : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + zoomOutFactor : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + maximumZoomFactor : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + zoomGraphPadding : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + scrollIncrementZoom : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + arrangeCircleRadiusMultiplier : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + arrangeGridSpacing : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + autoArrangeAttractiveForce : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + autoArrangeRepulsiveForce : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + autoArrangeDecelerationFactor : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + arrangeContractFactor : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + arrangeExpandFactor : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + undoLoggingInterval : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + undoLoggingMaximum : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + useAntiAliasing : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + usePureStroke : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + useBicubicInterpolation : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + useFractionalMetrics : ObservableModel.Property&lt;Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> + vertexWeightPrecision : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + edgeWeightPrecision : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + mainWindowWidth : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + mainWindowHeight : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + scriptLibraryWindowWidth : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + scriptLibraryWindowHeight : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + graphWindowWidth : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + graphWindowHeight : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + cascadeWindowOffset : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + language : ObservableModel.Property&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + defaultGraphName : ObservableModel.Property&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + directedEdgeArrowRatio : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + arrowKeyIncrement : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + edgeSnapMarginRatio : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + areCloseDistance : ObservableModel.Property&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + paintToolMenuDelay : ObservableModel.Property&lt;Integer&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - UserSettings() </td></tr>
<tr><td align="left" balign="left"> + getVertexColor(i : int) : Color </td></tr>
<tr><td align="left" balign="left"> + getEdgeColor(i : int) : Color </td></tr>
<tr><td align="left" balign="left"> + fromFile(file : File) </td></tr>
<tr><td align="left" balign="left"> + fromString(json : String) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./UserSettings.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.utilities.graph.BipolarOrientationTarjanAlgorithm
	c16252 [label=<<table title="pfc.utilities.graph.BipolarOrientationTarjanAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../utilities/graph/BipolarOrientationTarjanAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BipolarOrientationTarjanAlgorithm </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> pfc.utilities.graph </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - graph : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> - directed : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> - source : pfc.models.Vertex </td></tr>
<tr><td align="left" balign="left"> - target : pfc.models.Vertex </td></tr>
<tr><td align="left" balign="left"> - pre_dfs_num : java.util.Map&lt;pfc.models.Vertex, java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> - low : java.util.Map&lt;pfc.models.Vertex, pfc.models.Vertex&gt; </td></tr>
<tr><td align="left" balign="left"> - parents : java.util.Map&lt;pfc.models.Vertex, pfc.models.Vertex&gt; </td></tr>
<tr><td align="left" balign="left"> - sign : java.util.Map&lt;pfc.models.Vertex, java.lang.Boolean&gt; </td></tr>
<tr><td align="left" balign="left"> - listL : java.util.List&lt;pfc.models.Vertex&gt; </td></tr>
<tr><td align="left" balign="left"> - preorder : java.util.Deque&lt;pfc.models.Vertex&gt; </td></tr>
<tr><td align="left" balign="left"> - current : int </td></tr>
<tr><td align="left" balign="left"> - plus : boolean </td></tr>
<tr><td align="left" balign="left"> - minus : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BipolarOrientationTarjanAlgorithm(graph : pfc.models.Graph) </td></tr>
<tr><td align="left" balign="left"> + orientPlanarGraph() : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> - dfs(v : pfc.models.Vertex) </td></tr>
		</table></td></tr>
		</table>>, URL="../utilities/graph/BipolarOrientationTarjanAlgorithm.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.utilities.graph.BipolarOrientationPapamanthouAlgorithm
	c16253 [label=<<table title="pfc.utilities.graph.BipolarOrientationPapamanthouAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../utilities/graph/BipolarOrientationPapamanthouAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BipolarOrientationPapamanthouAlgorithm </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> pfc.utilities.graph </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - graph : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> - directed : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> - source : pfc.models.Vertex </td></tr>
<tr><td align="left" balign="left"> - target : pfc.models.Vertex </td></tr>
<tr><td align="left" balign="left"> - counter : java.lang.Integer </td></tr>
<tr><td align="left" balign="left"> - n : int </td></tr>
<tr><td align="left" balign="left"> - setQ : java.util.Set&lt;pfc.models.Vertex&gt; </td></tr>
<tr><td align="left" balign="left"> - timestamp : java.util.Map&lt;pfc.models.Vertex, java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> - stNumbering : java.util.Map&lt;pfc.models.Vertex, java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> - leafBlocks : java.util.Map&lt;pfc.models.Vertex, java.util.Set&lt;pfc.models.Vertex&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BipolarOrientationPapamanthouAlgorithm(graph : pfc.models.Graph) </td></tr>
<tr><td align="left" balign="left"> + orientPlanarGraph() : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> - stOrientationRecursive(v : pfc.models.Vertex) </td></tr>
<tr><td align="left" balign="left"> - chooseNextSource(nextSources : java.util.Set&lt;pfc.models.Vertex&gt;) : pfc.models.Vertex </td></tr>
<tr><td align="left" balign="left"> - updateBlocksCutPointsTree() </td></tr>
		</table></td></tr>
		</table>>, URL="../utilities/graph/BipolarOrientationPapamanthouAlgorithm.html", fontname="arial", fontcolor="black", fontsize=9.0];
	//pfc.settings.UserSettings extends pfc.models.ObservableModel
	c16191:p -> c16231:p [dir=back,arrowtail=empty];
	// pfc.utilities.graph.BipolarOrientationTarjanAlgorithm DEPEND pfc.settings.UserSettings
	c16252:p -> c16231:p [taillabel="", label="", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// pfc.utilities.graph.BipolarOrientationPapamanthouAlgorithm DEPEND pfc.settings.UserSettings
	c16253:p -> c16231:p [taillabel="", label="", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

