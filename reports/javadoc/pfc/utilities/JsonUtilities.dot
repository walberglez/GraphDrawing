#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.models.algorithms.sldominance.DominanceDrawing
	c10637 [label=<<table title="pfc.models.algorithms.sldominance.DominanceDrawing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../models/algorithms/sldominance/DominanceDrawing.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DominanceDrawing </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> pfc.models.algorithms.sldominance </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - graph : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> - elementObserver : java.util.Observer </td></tr>
<tr><td align="left" balign="left"> - notificationsSuspended : boolean </td></tr>
<tr><td align="left" balign="left"> - maxX : java.lang.Integer </td></tr>
<tr><td align="left" balign="left"> - maxY : java.lang.Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DominanceDrawing(areLoopsAllowed : boolean, areDirectedEdgesAllowed : boolean, areMultipleEdgesAllowed : boolean, areCyclesAllowed : boolean) </td></tr>
<tr><td align="left" balign="left"> + DominanceDrawing(graph : pfc.models.Graph) </td></tr>
<tr><td align="left" balign="left"> + DominanceDrawing(attributes : java.util.Map&lt;java.lang.String, java.lang.Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + DominanceDrawing(json : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getGraph() : pfc.models.Graph </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + suspendNotifications(suspend : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaxXCoordinate() : java.lang.Integer </td></tr>
<tr><td align="left" balign="left"> + getMaxYCoordinate() : java.lang.Integer </td></tr>
<tr><td align="left" balign="left"> - setMaxCoordinates() </td></tr>
		</table></td></tr>
		</table>>, URL="../models/algorithms/sldominance/DominanceDrawing.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing
	c10639 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../models/algorithms/visibilityrepresentation/VisibilityRepresentationDrawing.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VisibilityRepresentationDrawing </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> pfc.models.algorithms.visibilityrepresentation </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + vertexSegments : java.util.List&lt;pfc.models.algorithms.visibilityrepresentation.VertexSegment&gt; </td></tr>
<tr><td align="left" balign="left"> + edgeSegments : java.util.List&lt;pfc.models.algorithms.visibilityrepresentation.EdgeSegment&gt; </td></tr>
<tr><td align="left" balign="left"> - vertexToSegment : java.util.Map&lt;pfc.models.Vertex, pfc.models.algorithms.visibilityrepresentation.VertexSegment&gt; </td></tr>
<tr><td align="left" balign="left"> - edgeToSegment : java.util.Map&lt;pfc.models.Edge, pfc.models.algorithms.visibilityrepresentation.EdgeSegment&gt; </td></tr>
<tr><td align="left" balign="left"> - elementObserver : java.util.Observer </td></tr>
<tr><td align="left" balign="left"> - notificationsSuspended : boolean </td></tr>
<tr><td align="left" balign="left"> - maxX : java.lang.Integer </td></tr>
<tr><td align="left" balign="left"> - maxY : java.lang.Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing() </td></tr>
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing(attributes : java.util.Map&lt;java.lang.String, java.lang.Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing(json : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getVertexSegment(v : pfc.models.Vertex) : pfc.models.algorithms.visibilityrepresentation.VertexSegment </td></tr>
<tr><td align="left" balign="left"> + getEdgeSegment(e : pfc.models.Edge) : pfc.models.algorithms.visibilityrepresentation.EdgeSegment </td></tr>
<tr><td align="left" balign="left"> + suspendNotifications(suspend : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaxXCoordinate() : java.lang.Integer </td></tr>
<tr><td align="left" balign="left"> + getMaxYCoordinate() : java.lang.Integer </td></tr>
<tr><td align="left" balign="left"> - setMaxCoordinates() </td></tr>
		</table></td></tr>
		</table>>, URL="../models/algorithms/visibilityrepresentation/VisibilityRepresentationDrawing.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VertexSegment
	c10644 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VertexSegment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../models/algorithms/visibilityrepresentation/VertexSegment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VertexSegment </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> pfc.models.algorithms.visibilityrepresentation </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + yCoordinate : pfc.models.ObservableModel.Property&lt;java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + xLeftCoordinate : pfc.models.ObservableModel.Property&lt;java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + xRightCoordinate : pfc.models.ObservableModel.Property&lt;java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + vertex : pfc.models.Vertex </td></tr>
<tr><td align="left" balign="left"> + id : pfc.models.ObservableModel.Property&lt;java.util.UUID&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VertexSegment() </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(yCoordinate : java.lang.Integer, xLeftCoordinate : java.lang.Integer, xRightCoordinate : java.lang.Integer) </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(yCoordinate : java.lang.Integer, xLeftCoordinate : java.lang.Integer, xRightCoordinate : java.lang.Integer, vertex : pfc.models.Vertex) </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(members : java.util.Map&lt;java.lang.String, java.lang.Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(json : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
		</table></td></tr>
		</table>>, URL="../models/algorithms/visibilityrepresentation/VertexSegment.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.EdgeSegment
	c10645 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.EdgeSegment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../models/algorithms/visibilityrepresentation/EdgeSegment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EdgeSegment </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> pfc.models.algorithms.visibilityrepresentation </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + xCoordinate : pfc.models.ObservableModel.Property&lt;java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + yBottomCoordinate : pfc.models.ObservableModel.Property&lt;java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + yTopCoordinate : pfc.models.ObservableModel.Property&lt;java.lang.Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + edge : pfc.models.Edge </td></tr>
<tr><td align="left" balign="left"> + id : pfc.models.ObservableModel.Property&lt;java.util.UUID&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EdgeSegment() </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(xCoordinate : java.lang.Integer, yBottomCoordinate : java.lang.Integer, yTopCoordinate : java.lang.Integer) </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(xCoordinate : java.lang.Integer, yBottomCoordinate : java.lang.Integer, yTopCoordinate : java.lang.Integer, edge : pfc.models.Edge) </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(members : java.util.Map&lt;java.lang.String, java.lang.Object&gt;, vertices : java.util.Map&lt;java.lang.String, pfc.models.Vertex&gt;) </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(json : java.lang.String, vertices : java.util.Map&lt;java.lang.String, pfc.models.Vertex&gt;) </td></tr>
<tr><td align="left" balign="left"> + isShortEdge() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
		</table></td></tr>
		</table>>, URL="../models/algorithms/visibilityrepresentation/EdgeSegment.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.utilities.JsonUtilities
	c10658 [label=<<table title="pfc.utilities.JsonUtilities" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./JsonUtilities.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JsonUtilities </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JsonUtilities() </td></tr>
<tr><td align="left" balign="left"> + formatArray(i : Iterable&lt;?&gt;) : String </td></tr>
<tr><td align="left" balign="left"> - formatColor(color : Color) : String </td></tr>
<tr><td align="left" balign="left"> + formatObject(members : Map&lt;String, Object&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + formatString(s : String) : String </td></tr>
<tr><td align="left" balign="left"> + formatValue(o : Object) : String </td></tr>
<tr><td align="left" balign="left"> - parseArray(tokenizer : JsonUtilities.JsonScanner) : Iterable&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + parseArray(json : String) : Iterable&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> - parseColor(json : String) : Color </td></tr>
<tr><td align="left" balign="left"> - parseObject(tokenizer : JsonUtilities.JsonScanner) : Map&lt;String, Object&gt; </td></tr>
<tr><td align="left" balign="left"> + parseObject(json : String) : Map&lt;String, Object&gt; </td></tr>
<tr><td align="left" balign="left"> + parseString(json : String) : String </td></tr>
<tr><td align="left" balign="left"> + parseValue(json : String) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="./JsonUtilities.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.sldominance.DominanceDrawing DEPEND pfc.utilities.JsonUtilities
	c10637:p -> c10658:p [taillabel="", label="", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing NAVASSOC pfc.models.algorithms.visibilityrepresentation.VertexSegment
	c10639:p -> c10644:p [taillabel="", label="", headlabel="*\n-vertexSegments", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing NAVASSOC pfc.models.algorithms.visibilityrepresentation.EdgeSegment
	c10639:p -> c10645:p [taillabel="", label="", headlabel="*\n-edgeSegments", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing DEPEND pfc.utilities.JsonUtilities
	c10639:p -> c10658:p [taillabel="", label="", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// pfc.models.algorithms.visibilityrepresentation.VertexSegment DEPEND pfc.utilities.JsonUtilities
	c10644:p -> c10658:p [taillabel="", label="", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// pfc.models.algorithms.visibilityrepresentation.EdgeSegment DEPEND pfc.utilities.JsonUtilities
	c10645:p -> c10658:p [taillabel="", label="", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
}

