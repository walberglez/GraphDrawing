#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.models.algorithms.sldominance.SLDominanceAlgorithmHistory
	c1805 [label=<<table title="pfc.models.algorithms.sldominance.SLDominanceAlgorithmHistory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SLDominanceAlgorithmHistory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SLDominanceAlgorithmHistory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - dominanceDrawing : String </td></tr>
<tr><td align="left" balign="left"> - explanation : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SLDominanceAlgorithmHistory() </td></tr>
<tr><td align="left" balign="left"> + SLDominanceAlgorithmHistory(dominanceGraph : String, explanation : String) </td></tr>
<tr><td align="left" balign="left"> + getDominanceDrawing() : String </td></tr>
<tr><td align="left" balign="left"> + setDominanceDrawing(dominanceDrawing : String) </td></tr>
<tr><td align="left" balign="left"> + getExplanation() : String </td></tr>
<tr><td align="left" balign="left"> + setExplanation(explanation : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./SLDominanceAlgorithmHistory.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.sldominance.SLDominanceAlgorithm
	c1806 [label=<<table title="pfc.models.algorithms.sldominance.SLDominanceAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SLDominanceAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SLDominanceAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - dominance : Graph </td></tr>
<tr><td align="left" balign="left"> - drawing : DominanceDrawing </td></tr>
<tr><td align="left" balign="left"> - rotationsOut : Map&lt;Vertex, Rotation&gt; </td></tr>
<tr><td align="left" balign="left"> - rotationsIn : Map&lt;Vertex, Rotation&gt; </td></tr>
<tr><td align="left" balign="left"> - step : SLDominanceAlgorithm.Step </td></tr>
<tr><td align="left" balign="left"> - elementObserver : Observer </td></tr>
<tr><td align="left" balign="left"> - count : Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SLDominanceAlgorithm(stGraphG : Graph) </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : DominanceDrawing </td></tr>
<tr><td align="left" balign="left"> + getAlgorithmExplanation() : String </td></tr>
<tr><td align="left" balign="left"> + executeAlgorithm() </td></tr>
<tr><td align="left" balign="left"> - preprocessGraph() </td></tr>
<tr><td align="left" balign="left"> - nextOut(v : Vertex, n : Vertex) : Edge </td></tr>
<tr><td align="left" balign="left"> - predOut(v : Vertex, n : Vertex) : Edge </td></tr>
<tr><td align="left" balign="left"> - firstOut(v : Vertex) : Edge </td></tr>
<tr><td align="left" balign="left"> - lastOut(v : Vertex) : Edge </td></tr>
<tr><td align="left" balign="left"> - firstIn(v : Vertex) : Edge </td></tr>
<tr><td align="left" balign="left"> - lastIn(v : Vertex) : Edge </td></tr>
<tr><td align="left" balign="left"> - assignPreliminaryCoordinates() </td></tr>
<tr><td align="left" balign="left"> - labelX(v : Vertex) </td></tr>
<tr><td align="left" balign="left"> - labelY(v : Vertex) </td></tr>
<tr><td align="left" balign="left"> - assignFinalCoordinates() </td></tr>
<tr><td align="left" balign="left"> - assignFinalCoordinatesX() </td></tr>
<tr><td align="left" balign="left"> - assignFinalCoordinatesY() </td></tr>
<tr><td align="left" balign="left"> - initXCoordinateVertices() : TreeSet&lt;Vertex&gt; </td></tr>
<tr><td align="left" balign="left"> - initYCoordinateVertices() : TreeSet&lt;Vertex&gt; </td></tr>
<tr><td align="left" balign="left"> - equalsDegreeInOut(u : Vertex, v : Vertex) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./SLDominanceAlgorithm.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.sldominance.SLDominanceAlgorithm.Step
	c1807 [label=<<table title="pfc.models.algorithms.sldominance.SLDominanceAlgorithm.Step" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SLDominanceAlgorithm.Step.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Step </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> PRELIMINARY_LAYOUT </td></tr>
<tr><td align="left" balign="left"> COMPACTION </td></tr>
		</table></td></tr>
		</table>>, URL="./SLDominanceAlgorithm.Step.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.sldominance.DominanceDrawing
	c1808 [label=<<table title="pfc.models.algorithms.sldominance.DominanceDrawing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DominanceDrawing.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DominanceDrawing </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - graph : Graph </td></tr>
<tr><td align="left" balign="left"> - elementObserver : Observer </td></tr>
<tr><td align="left" balign="left"> - notificationsSuspended : boolean </td></tr>
<tr><td align="left" balign="left"> - maxX : Integer </td></tr>
<tr><td align="left" balign="left"> - maxY : Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DominanceDrawing(areLoopsAllowed : boolean, areDirectedEdgesAllowed : boolean, areMultipleEdgesAllowed : boolean, areCyclesAllowed : boolean) </td></tr>
<tr><td align="left" balign="left"> + DominanceDrawing(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> + DominanceDrawing(attributes : Map&lt;String, Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + DominanceDrawing(json : String) </td></tr>
<tr><td align="left" balign="left"> + getGraph() : Graph </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + suspendNotifications(suspend : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaxXCoordinate() : Integer </td></tr>
<tr><td align="left" balign="left"> + getMaxYCoordinate() : Integer </td></tr>
<tr><td align="left" balign="left"> - setMaxCoordinates() </td></tr>
		</table></td></tr>
		</table>>, URL="./DominanceDrawing.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.sldominance.SLDominanceAlgorithm NAVASSOC pfc.models.algorithms.sldominance.DominanceDrawing
	c1806:p -> c1808:p [taillabel="", label="", headlabel="-drawing", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

