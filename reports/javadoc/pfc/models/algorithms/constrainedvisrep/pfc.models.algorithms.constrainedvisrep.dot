#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.models.algorithms.constrainedvisrep.ConstrainedVisRepAlgorithm
	c1298 [label=<<table title="pfc.models.algorithms.constrainedvisrep.ConstrainedVisRepAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedVisRepAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConstrainedVisRepAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - stGraphG : Graph </td></tr>
<tr><td align="left" balign="left"> - paths : NonIntersectingPathList </td></tr>
<tr><td align="left" balign="left"> - stDualG : DualPathGraph </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingY : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingX : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> - drawing : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> - step : ConstrainedVisRepAlgorithm.Step </td></tr>
<tr><td align="left" balign="left"> - elementObserver : Observer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConstrainedVisRepAlgorithm(stGraphG : Graph, paths : NonIntersectingPathList) </td></tr>
<tr><td align="left" balign="left"> + getStDualG() : Graph </td></tr>
<tr><td align="left" balign="left"> + getStGraphG() : Graph </td></tr>
<tr><td align="left" balign="left"> + getTopologicalNumberingY() : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> + getTopologicalNumberingX() : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> + numberY(v : Vertex) : Integer </td></tr>
<tr><td align="left" balign="left"> + numberX(v : Vertex) : Integer </td></tr>
<tr><td align="left" balign="left"> + getPathFace(path : DirectedPath) : Vertex </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + getAlgorithmExplanation() : String </td></tr>
<tr><td align="left" balign="left"> + executeAlgorithm() </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingY() </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingX() </td></tr>
<tr><td align="left" balign="left"> - constructHorizontalVertices() </td></tr>
<tr><td align="left" balign="left"> - constructVerticalEdges() </td></tr>
<tr><td align="left" balign="left"> - getNumberXPaths(v : Vertex) : List&lt;Integer&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedVisRepAlgorithm.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.constrainedvisrep.ConstrainedVisRepAlgorithm.Step
	c1299 [label=<<table title="pfc.models.algorithms.constrainedvisrep.ConstrainedVisRepAlgorithm.Step" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedVisRepAlgorithm.Step.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Step </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> DUAL_GRAPH </td></tr>
<tr><td align="left" balign="left"> TOPO_NUM_GRAPH_Y </td></tr>
<tr><td align="left" balign="left"> TOPO_NUM_DUAL_X </td></tr>
<tr><td align="left" balign="left"> HORIZONTAL_VERTICES </td></tr>
<tr><td align="left" balign="left"> VERTICAL_EDGES </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedVisRepAlgorithm.Step.html", fontname="arial", fontcolor="black", fontsize=9.0];
}

