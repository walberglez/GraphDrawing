#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.models.algorithms.constrainedpolyline.ConstrainedPolylineAlgorithm
	c1172 [label=<<table title="pfc.models.algorithms.constrainedpolyline.ConstrainedPolylineAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedPolylineAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConstrainedPolylineAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - visibility : ConstrainedVisRepAlgorithm </td></tr>
<tr><td align="left" balign="left"> - polyline : Graph </td></tr>
<tr><td align="left" balign="left"> - paths : NonIntersectingPathList </td></tr>
<tr><td align="left" balign="left"> - step : ConstrainedPolylineAlgorithm.Step </td></tr>
<tr><td align="left" balign="left"> - elementObserver : Observer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConstrainedPolylineAlgorithm(stGraphG : Graph, paths : NonIntersectingPathList) </td></tr>
<tr><td align="left" balign="left"> + getVisibilityDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + getPolyline() : Graph </td></tr>
<tr><td align="left" balign="left"> + getAlgorithmExplanation() : String </td></tr>
<tr><td align="left" balign="left"> + executeAlgorithm() </td></tr>
<tr><td align="left" balign="left"> - constructHorizontalVertices() </td></tr>
<tr><td align="left" balign="left"> - constructVerticalEdges() </td></tr>
<tr><td align="left" balign="left"> - getLongEdgePositioning(vS : VertexSegment) : Point2D </td></tr>
<tr><td align="left" balign="left"> - getMedianPositioning(vS : VertexSegment) : Point2D </td></tr>
<tr><td align="left" balign="left"> - getPathPositioning(vS : VertexSegment, path : DirectedPath) : Point2D </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedPolylineAlgorithm.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.constrainedpolyline.ConstrainedPolylineAlgorithm.Step
	c1173 [label=<<table title="pfc.models.algorithms.constrainedpolyline.ConstrainedPolylineAlgorithm.Step" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConstrainedPolylineAlgorithm.Step.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Step </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> VISIBILITY </td></tr>
<tr><td align="left" balign="left"> HORIZONTAL_VERTICES </td></tr>
<tr><td align="left" balign="left"> VERTICAL_EDGES </td></tr>
		</table></td></tr>
		</table>>, URL="./ConstrainedPolylineAlgorithm.Step.html", fontname="arial", fontcolor="black", fontsize=9.0];
}

