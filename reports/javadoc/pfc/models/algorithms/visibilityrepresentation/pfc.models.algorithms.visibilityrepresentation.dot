#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.models.algorithms.visibilityrepresentation.VisRepAlgorithmHistory
	c1933 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VisRepAlgorithmHistory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisRepAlgorithmHistory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VisRepAlgorithmHistory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - graph : String </td></tr>
<tr><td align="left" balign="left"> - dual : String </td></tr>
<tr><td align="left" balign="left"> - drawing : String </td></tr>
<tr><td align="left" balign="left"> - explanation : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisRepAlgorithmHistory() </td></tr>
<tr><td align="left" balign="left"> + VisRepAlgorithmHistory(graph : String, dual : String, drawing : String, explanation : String) </td></tr>
<tr><td align="left" balign="left"> + getGraph() : String </td></tr>
<tr><td align="left" balign="left"> + getDual() : String </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : String </td></tr>
<tr><td align="left" balign="left"> + getExplanation() : String </td></tr>
<tr><td align="left" balign="left"> + setGraph(graph : String) </td></tr>
<tr><td align="left" balign="left"> + setDual(dual : String) </td></tr>
<tr><td align="left" balign="left"> + setDrawing(drawing : String) </td></tr>
<tr><td align="left" balign="left"> + setExplanation(explanation : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./VisRepAlgorithmHistory.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing
	c1934 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepresentationDrawing.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VisibilityRepresentationDrawing </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + vertexSegments : List&lt;VertexSegment&gt; </td></tr>
<tr><td align="left" balign="left"> + edgeSegments : List&lt;EdgeSegment&gt; </td></tr>
<tr><td align="left" balign="left"> - vertexToSegment : Map&lt;Vertex, VertexSegment&gt; </td></tr>
<tr><td align="left" balign="left"> - edgeToSegment : Map&lt;Edge, EdgeSegment&gt; </td></tr>
<tr><td align="left" balign="left"> - elementObserver : Observer </td></tr>
<tr><td align="left" balign="left"> - notificationsSuspended : boolean </td></tr>
<tr><td align="left" balign="left"> - maxX : Integer </td></tr>
<tr><td align="left" balign="left"> - maxY : Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing() </td></tr>
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing(attributes : Map&lt;String, Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing(json : String) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getVertexSegment(v : Vertex) : VertexSegment </td></tr>
<tr><td align="left" balign="left"> + getEdgeSegment(e : Edge) : EdgeSegment </td></tr>
<tr><td align="left" balign="left"> + suspendNotifications(suspend : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaxXCoordinate() : Integer </td></tr>
<tr><td align="left" balign="left"> + getMaxYCoordinate() : Integer </td></tr>
<tr><td align="left" balign="left"> - setMaxCoordinates() </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepresentationDrawing.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing.VertexSegmentList
	c1935 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing.VertexSegmentList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepresentationDrawing.VertexSegmentList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VertexSegmentList </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing.VertexSegmentList() </td></tr>
<tr><td align="left" balign="left"> + add(index : int, element : VertexSegment) </td></tr>
<tr><td align="left" balign="left"> + add(e : VertexSegment) : boolean </td></tr>
<tr><td align="left" balign="left"> + remove(index : int) : VertexSegment </td></tr>
<tr><td align="left" balign="left"> + remove(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + set(index : int, element : VertexSegment) : VertexSegment </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepresentationDrawing.VertexSegmentList.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing.EdgeSegmentList
	c1936 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing.EdgeSegmentList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepresentationDrawing.EdgeSegmentList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EdgeSegmentList </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepresentationDrawing.EdgeSegmentList() </td></tr>
<tr><td align="left" balign="left"> + add(index : int, element : EdgeSegment) </td></tr>
<tr><td align="left" balign="left"> + add(e : EdgeSegment) : boolean </td></tr>
<tr><td align="left" balign="left"> + remove(index : int) : EdgeSegment </td></tr>
<tr><td align="left" balign="left"> + remove(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + set(index : int, element : EdgeSegment) : EdgeSegment </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepresentationDrawing.EdgeSegmentList.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationAlgorithm
	c1937 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepresentationAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VisibilityRepresentationAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - stGraphG : Graph </td></tr>
<tr><td align="left" balign="left"> - stDualG : DualGraph </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingY : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingX : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> - drawing : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> - step : VisibilityRepresentationAlgorithm.Step </td></tr>
<tr><td align="left" balign="left"> - elementObserver : Observer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VisibilityRepresentationAlgorithm(stGraphG : Graph) </td></tr>
<tr><td align="left" balign="left"> + getStDualG() : Graph </td></tr>
<tr><td align="left" balign="left"> + getStGraphG() : Graph </td></tr>
<tr><td align="left" balign="left"> + getTopologicalNumberingY() : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> + getTopologicalNumberingX() : Map&lt;Vertex, Float&gt; </td></tr>
<tr><td align="left" balign="left"> + getDrawing() : VisibilityRepresentationDrawing </td></tr>
<tr><td align="left" balign="left"> + getAlgorithmExplanation() : String </td></tr>
<tr><td align="left" balign="left"> + executeAlgorithm() </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingY() </td></tr>
<tr><td align="left" balign="left"> - topologicalNumberingX() </td></tr>
<tr><td align="left" balign="left"> - numberY(v : Vertex) : Integer </td></tr>
<tr><td align="left" balign="left"> - numberX(v : Vertex) : Integer </td></tr>
<tr><td align="left" balign="left"> - constructHorizontalVertices() </td></tr>
<tr><td align="left" balign="left"> - constructVerticalEdges() </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepresentationAlgorithm.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationAlgorithm.Step
	c1938 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationAlgorithm.Step" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VisibilityRepresentationAlgorithm.Step.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> Step </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> DUAL_GRAPH </td></tr>
<tr><td align="left" balign="left"> TOPO_NUM_GRAPH_Y </td></tr>
<tr><td align="left" balign="left"> TOPO_NUM_DUAL_X </td></tr>
<tr><td align="left" balign="left"> HORIZONTAL_VERTICES </td></tr>
<tr><td align="left" balign="left"> VERTICAL_EDGES </td></tr>
		</table></td></tr>
		</table>>, URL="./VisibilityRepresentationAlgorithm.Step.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VertexSegment
	c1939 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.VertexSegment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VertexSegment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> VertexSegment </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + yCoordinate : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + xLeftCoordinate : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + xRightCoordinate : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + vertex : Vertex </td></tr>
<tr><td align="left" balign="left"> + id : ObservableModel.Property&lt;UUID&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + VertexSegment() </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(yCoordinate : Integer, xLeftCoordinate : Integer, xRightCoordinate : Integer) </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(yCoordinate : Integer, xLeftCoordinate : Integer, xRightCoordinate : Integer, vertex : Vertex) </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(members : Map&lt;String, Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + VertexSegment(json : String) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./VertexSegment.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.EdgeSegment
	c1940 [label=<<table title="pfc.models.algorithms.visibilityrepresentation.EdgeSegment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EdgeSegment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EdgeSegment </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + xCoordinate : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + yBottomCoordinate : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + yTopCoordinate : ObservableModel.Property&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + edge : Edge </td></tr>
<tr><td align="left" balign="left"> + id : ObservableModel.Property&lt;UUID&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EdgeSegment() </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(xCoordinate : Integer, yBottomCoordinate : Integer, yTopCoordinate : Integer) </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(xCoordinate : Integer, yBottomCoordinate : Integer, yTopCoordinate : Integer, edge : Edge) </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(members : Map&lt;String, Object&gt;, vertices : Map&lt;String, Vertex&gt;) </td></tr>
<tr><td align="left" balign="left"> + EdgeSegment(json : String, vertices : Map&lt;String, Vertex&gt;) </td></tr>
<tr><td align="left" balign="left"> + isShortEdge() : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./EdgeSegment.html", fontname="arial", fontcolor="black", fontsize=9.0];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing NAVASSOC pfc.models.algorithms.visibilityrepresentation.VertexSegment
	c1934:p -> c1939:p [taillabel="", label="", headlabel="*\n-vertexSegments", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing NAVASSOC pfc.models.algorithms.visibilityrepresentation.EdgeSegment
	c1934:p -> c1940:p [taillabel="", label="", headlabel="*\n-edgeSegments", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationAlgorithm NAVASSOC pfc.models.algorithms.visibilityrepresentation.VisibilityRepresentationDrawing
	c1937:p -> c1934:p [taillabel="", label="", headlabel="-drawing", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

