#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// pfc.models.ObservableList<T>
	c11233 [label=<<table title="pfc.models.ObservableList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ObservableList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ObservableList&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - list : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> - notificationsSuspended : boolean </td></tr>
<tr><td align="left" balign="left"> - elementObserver : Observer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ObservableList() </td></tr>
<tr><td align="left" balign="left"> + add(location : int, object : T) </td></tr>
<tr><td align="left" balign="left"> + add(object : T) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(collection : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(location : int, collection : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + contains(object : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAll(collection : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + get(location : int) : T </td></tr>
<tr><td align="left" balign="left"> + indexOf(object : Object) : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(object : Object) : int </td></tr>
<tr><td align="left" balign="left"> + listIterator() : ListIterator&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator(location : int) : ListIterator&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + remove(location : int) : T </td></tr>
<tr><td align="left" balign="left"> + remove(object : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeAll(collection : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(collection : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + set(location : int, object : T) : T </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + subList(start : int, end : int) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + suspendNotifications(suspend : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(array : T[]) : T[] </td></tr>
		</table></td></tr>
		</table>>, URL="./ObservableList.html", fontname="arial", fontcolor="black", fontsize=9.0];
}

